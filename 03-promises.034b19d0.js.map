{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,kBAC9BE,KAAMH,SAASC,cAAc,iBAC7BG,OAAQJ,SAASC,cAAc,oBAsCjC,SAASI,EAAcC,EAAUJ,GAC/B,IAAMK,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC5BC,YAAW,WACRN,EACFI,EAAQ,CAAEL,SAAUA,EAAUJ,MAAOA,IAErCU,EAAO,CAAEN,SAAUA,EAAUJ,MAAOA,MAElCA,MA7CNJ,EAAKC,KAAKe,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAIC,iBAEJ,IAAMC,EAAe,CACnBf,MAAOgB,OAAOpB,EAAKI,MAAMiB,OACzBhB,KAAMe,OAAOpB,EAAKK,KAAKgB,OACvBf,OAAQc,OAAOpB,EAAKM,OAAOe,QAG7B,GAAI,EAAIF,EAAaf,OAAS,EAAIe,EAAad,KAG7C,OAFAiB,QAAQC,IAAI,qBAAsBJ,EAAaf,YAC/CkB,QAAQC,IAAI,oBAAqBJ,EAAad,OAOlD,SAA8BmB,GAE5B,I,IAF8BC,EAAFD,EAAEpB,MAAOC,EAATmB,EAASnB,KAAMC,EAAfkB,EAAelB,OAElCoB,EAAW,EAAGA,GAAYpB,EAAQoB,GAAY,EAErDnB,EAAcmB,EAAUD,GACrBE,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUJ,EAAKwB,EAALxB,MACrBN,EAAA+B,OAAOC,QAAQ,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAAN3B,EAAM,UAE9D4B,OAAM,SAAAJ,G,IAAGpB,EAAQoB,EAARpB,SAAUJ,EAAKwB,EAALxB,MAClBN,EAAA+B,OAAOI,QAAQ,sBAAqCF,OAAfvB,EAAS,QAAYuB,OAAN3B,EAAM,UAE1DqB,GAASpB,EAdX6B,CAAqBf,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n}\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n\n  const creationData = {\n    delay: Number(refs.delay.value),\n    step: Number(refs.step.value),\n    amount: Number(refs.amount.value),\n  }\n\n  if (0 > creationData.delay || 0 > creationData.step) {\n    console.log('creationData.delay', creationData.delay);\n    console.log('creationData.step', creationData.step);\n    return;\n  }\n  \n  preparePromiseCreate(creationData);\n}\n\nfunction preparePromiseCreate({ delay, step, amount }) {\n  \n  for (let position = 1; position <= amount; position += 1) {\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n    Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n    delay += step;\n }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n   setTimeout(() => {\n  if (shouldResolve) {\n    resolve({ position: position, delay: delay });\n  } else {\n    reject({ position: position, delay: delay });\n  }\n   }, delay);\n    });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","$ce04d3a99e08e73b$var$createPromise","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","evt","preventDefault","creationData","Number","value","console","log","param1","delay1","position1","then","param","Notify","success","concat","catch","failure","$ce04d3a99e08e73b$var$preparePromiseCreate"],"version":3,"file":"03-promises.034b19d0.js.map"}