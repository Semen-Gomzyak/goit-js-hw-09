{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,kBAC9BE,KAAMH,SAASC,cAAc,iBAC7BG,OAAQJ,SAASC,cAAc,oBAsCjC,SAASI,EAAcC,EAAUJ,GAC/B,MAAMK,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC5BC,YAAW,KACRN,EACFI,EAAQ,CAAEL,SAAUA,EAAUJ,MAAOA,IAErCU,EAAO,CAAEN,SAAUA,EAAUJ,MAAOA,MAElCA,MA7CNJ,EAAKC,KAAKe,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAIC,iBAEJ,MAAMC,EAAe,CACnBf,MAAOgB,OAAOpB,EAAKI,MAAMiB,OACzBhB,KAAMe,OAAOpB,EAAKK,KAAKgB,OACvBf,OAAQc,OAAOpB,EAAKM,OAAOe,QAG7B,GAAI,EAAIF,EAAaf,OAAS,EAAIe,EAAad,KAG7C,OAFAiB,QAAQC,IAAI,qBAAsBJ,EAAaf,YAC/CkB,QAAQC,IAAI,oBAAqBJ,EAAad,OAOlD,UAAgCD,MAAAoB,EAAKnB,KAAEA,EAAIC,OAAEA,IAE3C,IAAK,IAAImB,EAAW,EAAGA,GAAYnB,EAAQmB,GAAY,EAErDlB,EAAckB,EAAUD,GACrBE,MAAK,EAAClB,SAAEA,EAAQJ,MAAEA,MACrBN,EAAA6B,OAAOC,QAAQ,uBAAqBpB,QAAiBJ,UAEtDyB,OAAM,EAACrB,SAAEA,EAAQJ,MAAEA,MAClBN,EAAA6B,OAAOG,QAAQ,sBAAoBtB,QAAeJ,UAElDoB,GAASnB,EAdX0B,CAAqBZ","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n}\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n\n  const creationData = {\n    delay: Number(refs.delay.value),\n    step: Number(refs.step.value),\n    amount: Number(refs.amount.value),\n  }\n\n  if (0 > creationData.delay || 0 > creationData.step) {\n    console.log('creationData.delay', creationData.delay);\n    console.log('creationData.step', creationData.step);\n    return;\n  }\n  \n  preparePromiseCreate(creationData);\n}\n\nfunction preparePromiseCreate({ delay, step, amount }) {\n  \n  for (let position = 1; position <= amount; position += 1) {\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n    Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n    delay += step;\n }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n   setTimeout(() => {\n  if (shouldResolve) {\n    resolve({ position: position, delay: delay });\n  } else {\n    reject({ position: position, delay: delay });\n  }\n   }, delay);\n    });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delay","step","amount","$47d4ff9957288465$var$createPromise","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","evt","preventDefault","creationData","Number","value","console","log","delay1","position1","then","Notify","success","catch","failure","$47d4ff9957288465$var$preparePromiseCreate"],"version":3,"file":"03-promises.21fc0008.js.map"}